language: node_js
node_js:
  - "8.12"
sudo: false
env:
  - NODE_ENV='test'
matrix:
  # this matrix runs two processes in parallel, one for android, one for iOS
  include:
    - language: android
      os: linux
      jdk: oraclejdk8
      sudo: required
      node_js: false
      before_install:
        - openssl aes-256-cbc -K $encrypted_81656b5e166a_key -iv $encrypted_81656b5e166a_iv -in secrets.tar.enc -out secrets.tar -d
        - tar xvf secrets.tar
        - nvm install node
        - node --version
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.12.3
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - yarn install --frozen-lockfile
      before_deploy:
        - find . -name *.apk
      deploy:
        provider: releases
        name: $TRAVIS_TAG
        api_key:
          secure: ao6BfKCG0/QFDITW8cJ+cuHgWBP2UgOK3ONMmaLcRIih9h8ZZB5sRPL5epphUsMQVcc3p9+flUOcPGqAjC6xhk9+/MiTdk8733WmaKxAqvcEQzfoaWjAMRyOAByLYGyk1T9wCaHI5nvEQsdoxyL1i36J3QcSZ6cqbAwnFkAgJ4ovoCupNBrMC36PGMtzTNcGOQ1Vxcr+o/sxwF1ic4TbkvWCXwZmuStUvMIcjN+unXIuh9F0zcvEVVbt2ElFZkvzIdGhvWpdbOTujRldI5MgGU496sRniKY5gxVY91r2quTOG/C310RBBSmO904s8CHcT1y5R1ou+uUF0Zis0VMza/Atp3N/uPQYOjs88x6rZcqdsSjXP3XnrksdflMPuwqAI4ZbYZZ3GDveMEk58WOO24n2fGRszml+EuseB+zATDI8ZevefjjYOPQwk9IHoeSz3h0WSqnoK5/WHW+YImCPp9YZu+YMKNfrQEPlNbeKNRrsgwy3sOoOeIuUEb4MzdKPkdipggxhdck68eEU8Ynf9jWvoE6G1Ft4RIEG6ZZmYYsT3zxMHG0CbR9XW4wum/XZ+yXv7ONfQvmyo6Lf9b14fBDYScc/8gFSr3SAQAiwuLRKdf13SG3VB6uvrtz87VQg5PNdsNnG8cH5J5yFLGfERKTAZZa8b61vuD/xbD+UwZ4=
        file: "./android/app/build/outputs/apk/dev/release/app-dev-release.apk"
        skip_cleanup: true
        on:
          all_branches: true
          repo: mapswipe/mapswipe
          tags: true
      android:
        components:
          - tools
          - platform-tools
          - build-tools-28.0.2
          - android-28
          - android-27
          - android-26
          - extra-android-m2repository
          - extra-google-google_play_services
          - extra-google-m2repository
          - addon-google_apis-google-27
      before_script:
        - yarn lint
        - yarn flow
        - yarn test
        - sudo sysctl fs.inotify.max_user_watches=524288
        - sudo sysctl -p
      script:
        - yarn buildDev
    - language: objective-c
      os: osx
      osx_image: xcode10.2
      node_js: false
      env:
        - FASTLANE_DISABLE_COLORS=1
      addons:
        ssh_known_hosts: gitlab.com
      before_install:
        - set -o pipefail
        - gem install bundler --pre
        - nvm install node
        - node --version
        - travis_retry npm install -g yarn
        - yarn -version
        # open the secret box with passwords and API keys. The path should include ios/cfg
        - openssl aes-256-cbc -K $encrypted_175ea8c9aaac_key -iv $encrypted_175ea8c9aaac_iv -in ios/cfg/secrets.tar.enc -out ios/cfg/secrets.tar -d
        - tar -xvf ios/cfg/secrets.tar -C ios/cfg
      install:
        - bundle install
        - travis_retry gem install xcpretty cocoapods
        - travis_retry yarn install --frozen-lockfile
      script:
        # calculate version numbers for fastlane
        - cd ios
        - source version-ios.sh
        # try to hide some build warnings
        - export CLANG_WARN_COMMA=NO
        - export CLANG_WARN_DOCUMENTATION=NO
        # setup RSA key so we can clone the certificate repo in gitlab
        - eval "$(ssh-agent -s)"
        - chmod 600 cfg/mapswipe.dev_at_gmail_rsa_key_for_travis_ci
        - ssh-add cfg/mapswipe.dev_at_gmail_rsa_key_for_travis_ci
        # define a custom keychain for fastlane to use
        - export KEY_CHAIN=ios-build.keychain
        - security create-keychain -p travis $KEY_CHAIN
        - security default-keychain -s $KEY_CHAIN
        - security unlock-keychain -p travis $KEY_CHAIN
        - security set-keychain-settings -t 3600 -u $KEY_CHAIN
        # The test lane refreshes the development certificates, compiles the app and launches the unit tests.
        # UI Tests have been disabled since Travis has issues launching the simulator.
        - bundle exec fastlane test
        - bundle exec fastlane test_build_release
      before_deploy:
      deploy:
        # deploy the beta/dev build to testflight for all tagged commits
        - provider: script
          skip_cleanup: true
          script:
            - bundle exec fastlane beta --verbose
          on:
            all_branches: true
            tags: true
        # and for tagged commits to master, deploy to production
        # FIXME: this probably does not work yet
        # TODO: copy the GoogleService-Info.prd.plist to replace GoogleService-Info.plist
        # TODO: Do the same for the sentry.properties
        - provider: script
          script:
            - fastlane release
          on:
            branch: master
            tags: true
